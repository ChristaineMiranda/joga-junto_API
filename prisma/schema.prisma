// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  USER
  ADMIN
}

model User {
  id         Int          @id @default(autoincrement())
  name       String       
  foto       String
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  role       Role         @default(USER)
  Session    Session[]
  Guess      Guess[]
  Group      Group[]
  GroupUser  GroupUser[]

}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Group {
  id        Int      @id @default(autoincrement())
  creatorId Int 
  User      User     @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  codeGroup String   @unique @db.VarChar(255)
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  GroupUser GroupUser[]
  Guess     Guess[]
}
model GroupUser {
  id        Int      @id @default(autoincrement())
  groupId   Int 
  Group     Group     @relation(fields: [groupId], references: [id], onDelete: Cascade)
  userId    Int  
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  score     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Game {
  id Int @id @default(autoincrement())
  firstTeam String
  secondTeam String
  goalsFirst  Int? 
  goalsSecond Int?
  winner String?
  dateTime DateTime
  step  String
  round String
  trip  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Guess      Guess[]

}

model Guess {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  gameId    Int   
  Game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)   
  groupId   Int   
  Group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  goalsFirstTeam Int
  goalsSecondTeam Int     
  isCorrect Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}


  

